#!/bin/bash

# Environment Setup Script
# Creates .env.local file with all necessary variables

set -e

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${BLUE}🔧 DateKeeper Environment Setup${NC}"
echo -e "${BLUE}================================${NC}"

# Check if .env.local already exists
if [ -f ".env.local" ]; then
    echo -e "${YELLOW}⚠️  .env.local already exists!${NC}"
    echo -e "${BLUE}Choose an option:${NC}"
    echo "1. Backup existing and create new"
    echo "2. Exit (keep existing)"
    
    read -p "Enter choice (1-2): " choice
    
    case $choice in
        1)
            mv .env.local .env.local.backup.$(date +%Y%m%d_%H%M%S)
            echo -e "${GREEN}✅ Backed up existing .env.local${NC}"
            ;;
        2)
            echo -e "${GREEN}👋 Keeping existing .env.local${NC}"
            exit 0
            ;;
        *)
            echo -e "${RED}❌ Invalid choice${NC}"
            exit 1
            ;;
    esac
fi

# Generate NextAuth secret
echo -e "${BLUE}🔐 Generating NextAuth secret...${NC}"
NEXTAUTH_SECRET=$(openssl rand -base64 32)

# Create .env.local file
cat > .env.local << EOF
# Local Development Environment Variables
# Generated by setup-env.sh on $(date)
# DO NOT commit this file to git!

# =============================================================================
# GOOGLE OAUTH CREDENTIALS (Required - Fill these in!)
# =============================================================================
# Get these from Google Cloud Console:
# 1. Go to: https://console.cloud.google.com/
# 2. Create a project or select existing
# 3. Enable Google+ API
# 4. Go to APIs & Services → Credentials
# 5. Create OAuth 2.0 Client ID
# 6. Add http://localhost:3000 to authorized origins
# 7. Add http://localhost:3000/api/auth/callback/google to redirect URIs

GOOGLE_CLIENT_ID=your-google-client-id-here.apps.googleusercontent.com
GOOGLE_CLIENT_SECRET=your-google-client-secret-here

# =============================================================================
# NEXTAUTH CONFIGURATION (Auto-generated)
# =============================================================================
NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
NEXTAUTH_URL=http://localhost:3000

# =============================================================================
# DATABASE CONFIGURATION (Should work with Docker)
# =============================================================================
DATABASE_URL=postgresql://datekeeper_user:datekeeper_password@localhost:5432/datekeeper_db

# =============================================================================
# APPLICATION CONFIGURATION
# =============================================================================
APP_ENV=development

# =============================================================================
# DEVELOPMENT HELPERS
# =============================================================================
# Uncomment these for easier local development

# Skip email verification in development
# SKIP_EMAIL_VERIFICATION=true

# Enable debug logging
# DEBUG=true
# NEXTAUTH_DEBUG=true

# Mock authentication (alternative to Google OAuth)
# USE_MOCK_AUTH=false
EOF

echo -e "${GREEN}✅ Created .env.local file!${NC}"
echo ""
echo -e "${YELLOW}📋 Next Steps:${NC}"
echo ""
echo -e "${BLUE}1. Get Google OAuth Credentials:${NC}"
echo "   • Go to: https://console.cloud.google.com/"
echo "   • Create a project: 'DateKeeper Development'"
echo "   • Enable Google+ API"
echo "   • Create OAuth 2.0 Client ID"
echo "   • Add authorized origins: http://localhost:3000"
echo "   • Add redirect URI: http://localhost:3000/api/auth/callback/google"
echo ""
echo -e "${BLUE}2. Update .env.local:${NC}"
echo "   • Replace GOOGLE_CLIENT_ID with your actual Client ID"
echo "   • Replace GOOGLE_CLIENT_SECRET with your actual Client Secret"
echo ""
echo -e "${BLUE}3. Test your setup:${NC}"
echo "   • npm run dev"
echo "   • Go to http://localhost:3000"
echo "   • Try signing in with Google"
echo ""
echo -e "${GREEN}📖 For detailed instructions, see: docs/GOOGLE_OAUTH_SETUP.md${NC}"
echo ""
echo -e "${RED}🚨 Important: Never commit .env.local to git!${NC}"
