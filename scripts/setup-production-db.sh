#!/bin/bash

echo "🗄️ Production Database Setup Guide"
echo "=================================="
echo ""

echo "📋 Step-by-Step Instructions:"
echo ""

echo "1️⃣ Create Vercel Postgres Databases:"
echo "   → Go to: https://vercel.com/dashboard"
echo "   → Select your DateKeeper project"
echo "   → Go to Storage tab"
echo "   → Create Database → PostgreSQL"
echo ""
echo "   Create TWO databases:"
echo "   📊 Staging: 'datekeeper-staging'"
echo "   🚀 Production: 'datekeeper-production'"
echo ""

echo "2️⃣ Get Connection Strings:"
echo "   → After creating each database, copy the POSTGRES_PRISMA_URL"
echo "   → This is optimized for Prisma and includes connection pooling"
echo ""

echo "3️⃣ Add to GitHub Environment Secrets:"
echo "   → Go to: https://github.com/shaibs3/DateKeeper/settings/environments"
echo ""
echo "   For STAGING environment:"
echo "   → Environment secrets → Add secret"
echo "   → Name: DATABASE_URL"
echo "   → Value: [Your staging POSTGRES_PRISMA_URL]"
echo ""
echo "   For PRODUCTION environment:"
echo "   → Environment secrets → Add secret"
echo "   → Name: DATABASE_URL" 
echo "   → Value: [Your production POSTGRES_PRISMA_URL]"
echo ""

echo "4️⃣ Test Database Connection (Optional):"
echo "   → Set DATABASE_URL in your local .env.local"
echo "   → Run: npx prisma db pull"
echo "   → This will test the connection"
echo ""

echo "5️⃣ Deploy and Test:"
echo "   → Push to main branch"
echo "   → Deployment will run database migrations automatically"
echo "   → Check deployment logs for success"
echo ""

echo "🔧 Troubleshooting:"
echo "   → If migrations fail: Check DATABASE_URL format"
echo "   → If connection fails: Verify database is running"
echo "   → If permissions fail: Check database user permissions"
echo ""

echo "📚 Database URLs Format:"
echo "   POSTGRES_PRISMA_URL format:"
echo "   postgresql://username:password@host:5432/database?pgbouncer=true&connect_timeout=15"
echo ""

echo "✅ Once complete, your production app will have:"
echo "   → Working database connections"
echo "   → Automatic migrations on deployment"
echo "   → Health endpoints returning 200 (if re-enabled)"
echo "   → Full authentication and data persistence"
echo ""

echo "🚀 Ready to set up your production database!"
