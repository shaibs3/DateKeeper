name: Deploy to Production

on:
  # Trigger after CI pipeline completes successfully on main branch
  workflow_run:
    workflows: ["CI Pipeline"]
    types:
      - completed
    branches: [ main ]
  # Allow manual deployment with optional test skipping
  workflow_dispatch:
    inputs:
      skip_tests:
        description: 'Skip test suite (emergency deployment)'
        required: false
        default: 'false'
        type: boolean

env:
  NODE_VERSION: '22.x'

jobs:
  deploy-production:
    runs-on: ubuntu-latest
    # Only run if CI pipeline completed successfully
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}
    environment: 
      name: production
      url: https://datekeeper.vercel.app
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run full test suite
      if: github.event.inputs.skip_tests != 'true'
      run: |
        npm run lint
        npm run type-check
        npm test -- --coverage --watchAll=false

    - name: Install Vercel CLI
      run: npm install --global vercel@latest

    - name: Debug Environment Access
      run: |
        echo "🔍 GitHub Environment Debug:"
        echo "Current environment: ${{ github.environment }}"
        echo "Repository: ${{ github.repository }}"
        echo "Event: ${{ github.event_name }}"
        echo "Ref: ${{ github.ref }}"

    - name: Pull Vercel Environment Information
      run: |
        echo "🔍 Vercel Configuration Debug Info:"
        echo "Environment: production"
        echo "VERCEL_ORG_ID is set: $([[ -n "$VERCEL_ORG_ID" ]] && echo "✅ Yes (${#VERCEL_ORG_ID} chars) - ${VERCEL_ORG_ID:0:8}..." || echo "❌ No")"
        echo "VERCEL_PROJECT_ID is set: $([[ -n "$VERCEL_PROJECT_ID" ]] && echo "✅ Yes (${#VERCEL_PROJECT_ID} chars) - ${VERCEL_PROJECT_ID:0:8}..." || echo "❌ No")"
        echo "VERCEL_TOKEN is set: $([[ -n "$VERCEL_TOKEN" ]] && echo "✅ Yes (${#VERCEL_TOKEN} chars) - ${VERCEL_TOKEN:0:8}..." || echo "❌ No")"
        echo ""
        echo "🔧 If secrets are missing, check:"
        echo "1. GitHub → Settings → Environments → production → Environment secrets"
        echo "2. Ensure no protection rules are blocking the deployment"
        echo "3. Verify secret names match exactly: VERCEL_TOKEN, VERCEL_ORG_ID, VERCEL_PROJECT_ID"
        echo ""
        echo "📋 To get correct values locally:"
        echo "   vercel link  # Links project and shows IDs"
        echo "   cat .vercel/project.json  # Shows orgId and projectId"
        echo "   vercel token create  # Creates new token"
        echo "🚀 Pulling Vercel environment information..."
        vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
      env:
        VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
        VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}

    - name: Build Project Artifacts
      run: |
        export APP_ENV=production
        vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
      env:
        VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
        VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

    - name: Deploy to Vercel (Production)
      id: deploy
      run: |
        DEPLOYMENT_URL=$(vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }})
        echo "deployment-url=$DEPLOYMENT_URL" >> $GITHUB_OUTPUT
        echo "Production deployment URL: $DEPLOYMENT_URL"
      env:
        VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
        VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

    - name: Health Check
      run: |
        echo "Waiting for production deployment to be ready..."
        sleep 30
        curl -f https://datekeeper.vercel.app/api/health || exit 1
        echo "✅ Production deployment is healthy!"

    # Temporarily disabled E2E tests due to DATABASE_URL environment variable issues
    # - name: Run E2E smoke tests against production
    #   if: github.event.inputs.skip_tests != 'true'
    #   run: npm run test:e2e -- --grep "smoke"
    #   env:
    #     CI: true
    #     BASE_URL: https://datekeeper.vercel.app

    - name: Create GitHub Release
      if: success()
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ github.run_number }}
        release_name: Release v${{ github.run_number }}
        body: |
          🚀 **Production Deployment v${{ github.run_number }}**
          
          **Deployed URL:** https://datekeeper.vercel.app
          **Commit:** ${{ github.sha }}
          
          **Changes:**
          ${{ github.event.head_commit.message }}
          
          **Status:**
          ✅ Tests passed
          ✅ Health check passed
          ✅ Production deployment successful
        draft: false
        prerelease: false

    - name: Notify deployment success
      if: success()
      run: |
        echo "🎉 Production deployment successful!"
        echo "🚀 URL: https://datekeeper.vercel.app"
        echo "📊 Deployment: ${{ steps.deploy.outputs.deployment-url }}"
        echo "🏷️ Release: v${{ github.run_number }}"

    - name: Notify deployment failure
      if: failure()
      run: |
        echo "❌ Production deployment failed!"
        echo "Check the logs above for details"
        echo "Consider rolling back if needed"
        exit 1
