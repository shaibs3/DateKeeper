name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  # Job 1: Linting and Type Checking
  lint-and-type-check:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run ESLint
      run: npm run lint

    - name: Run type checking
      run: npm run type-check

    - name: Check code formatting
      run: npm run format:check

  # Job 2: Unit Tests
  unit-tests:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run unit tests
      run: npm test -- --coverage --watchAll=false

    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info
        fail_ci_if_error: false

  # Job 3: Build
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Create test environment file
      run: |
        cat > .env.local << EOF
        NEXTAUTH_SECRET=test-secret-for-ci-only-not-secure
        NEXTAUTH_URL=http://localhost:3000
        GOOGLE_CLIENT_ID=test-client-id
        GOOGLE_CLIENT_SECRET=test-client-secret
        DATABASE_URL=file:./test.db
        EOF

    - name: Build application
      run: npm run build

    - name: Cache build output
      uses: actions/cache@v3
      with:
        path: .next
        key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
        restore-keys: |
          ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-

  # Job 4: E2E Tests
  e2e-tests:
    runs-on: ubuntu-latest
    needs: [lint-and-type-check, build]
    strategy:
      fail-fast: false
      matrix:
        browser: [chromium, firefox]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Install Playwright Browsers
      run: npx playwright install --with-deps ${{ matrix.browser }}

    - name: Create test environment file
      run: |
        cat > .env.local << EOF
        NEXTAUTH_SECRET=test-secret-for-ci-only-not-secure
        NEXTAUTH_URL=http://localhost:3000
        GOOGLE_CLIENT_ID=test-client-id
        GOOGLE_CLIENT_SECRET=test-client-secret
        DATABASE_URL=file:./test.db
        EOF

    - name: Run Playwright tests
      run: npx playwright test --project=${{ matrix.browser }}
      env:
        CI: true

    - name: Upload Playwright Report
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: playwright-report-${{ matrix.browser }}
        path: playwright-report/
        retention-days: 30

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: test-results-${{ matrix.browser }}
        path: test-results/
        retention-days: 30